// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // Change "mysql" to "postgresql", "sqlserver" or "sqlite" depending on your database
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  user
  admin
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  name      String
  password  String
  role      Role     @default(user)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Photo        Photo[]
  Album        Album[]
  PhotoComment PhotoComment[]
  PhotoLike    PhotoLike[]
}

model Photo {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  url         String
  userId      Int
  albumId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user         User           @relation(fields: [userId], references: [id])
  album        Album          @relation(fields: [albumId], references: [id])
  PhotoComment PhotoComment[]
  PhotoLike    PhotoLike[]

  @@index([userId])
  @@index([albumId])
}

model Album {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  User  User    @relation(fields: [userId], references: [id])
  Photo Photo[]

  @@index([userId])
}

model PhotoComment {
  id        Int      @id @default(autoincrement())
  comment   String
  photoId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Photo Photo @relation(fields: [photoId], references: [id])
  User  User  @relation(fields: [userId], references: [id])

  @@index([photoId])
  @@index([userId])
}

model PhotoLike {
  id        Int      @id @default(autoincrement())
  photoId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Photo Photo @relation(fields: [photoId], references: [id])
  User  User  @relation(fields: [userId], references: [id])

  @@index([photoId])
  @@index([userId])
}
